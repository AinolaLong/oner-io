{"version":3,"file":null,"sources":["../config/host.js","natty-fetch.spec.js","util.spec.js","expect-action.js","ajax.spec.js","event.spec.js","storage.spec.js","plugin.spec.js","plugin.soon.spec.js","plugin.loop.spec.js","plugin.customRequest.spec.js","simple.spec.js","private-promise.spec.js"],"sourcesContent":["const host = 'http://localhost:8010/'\nexport {host}\n\n","\nimport {host} from '../config/host'\n\ndescribe('nattyFetch v__VERSION__ Unit Test', function() {\n\n    describe('static',function() {\n        it('version v__VERSION__', function() {\n            expect(nattyFetch.version).to.equal('__VERSION__');\n        });\n    });\n\n    describe('global setting',function() {\n        this.timeout(1000*10);\n        let defaultGlobalConfig = nattyFetch.getGlobal();\n        let defaultGlobalConfigProperties = [\n            'data',\n            'fit',\n            'header',\n            'ignoreSelfConcurrent',\n            'jsonp',\n            'log',\n            'method',\n            'mock',\n            'mockUrl',\n            'mockUrlPrefix',\n            'process',\n            'retry',\n            'timeout',\n            'url',\n            'urlPrefix',\n            'withCredentials',\n            'traditional'\n        ];\n\n        let emptyEvent = nattyFetch._event;\n\n        let resetNattyDBGlobalConfig = function () {\n            nattyFetch.setGlobal(defaultGlobalConfig);\n        };\n\n        beforeEach(function () {\n            resetNattyDBGlobalConfig();\n        });\n\n        afterEach(function () {\n            // 清理所有事件\n            let i;\n            for (i in nattyFetch._event) {\n                if (i.indexOf('__') === 0) {\n                    delete nattyFetch._event[i];\n                }\n            }\n        });\n\n        it('check default global config properties: `nattyFetch.getGlobal()`',function() {\n            defaultGlobalConfigProperties.forEach(function (property) {\n                expect(defaultGlobalConfig).to.have.key(property);\n            });\n        });\n\n        it('check `nattyFetch.getGlobal(\"property\")`', function () {\n            expect(nattyFetch.getGlobal('jsonp')).to.be(false);\n        });\n\n        it('check `nattyFetch.setGlobal(obj)`', function () {\n            nattyFetch.setGlobal({\n                data: {\n                    '_csrf_token': 1\n                }\n            });\n            expect(nattyFetch.getGlobal('data')).to.eql({\n                '_csrf_token': 1\n            });\n            // 还原\n            nattyFetch.setGlobal({data: {}});\n        });\n\n        it('Context instance would inherit and extend the global config', function () {\n\n            let urlPrefix = 'http://test.com/api';\n            let context = nattyFetch.context({\n                urlPrefix\n            });\n\n            // 继承了所有的全局配置\n            // defaultGlobalConfigProperties.forEach(function (property) {\n            //     expect(DBC.config).to.have.key(property);\n            // });\n            // 也扩展了全局配置\n            expect(context._config.urlPrefix).to.be(urlPrefix);\n        });\n\n        it('Context instance would inherit and extend the global config 2', function () {\n            let urlPrefix = 'http://test.com/api';\n            nattyFetch.setGlobal({\n                urlPrefix: urlPrefix\n            });\n\n            let context = nattyFetch.context();\n\n            context.create('order', {\n                create: {}\n            });\n\n            expect(context.api.order.create.config.urlPrefix).to.be(urlPrefix);\n        });\n\n        it('catch error', function (done) {\n            nattyFetch.setGlobal({\n                urlPrefix: host\n            });\n\n            let context = new nattyFetch.context();\n            context.create('order', {\n                create: {\n                    url: 'api/order-create',\n                    method: 'POST'\n                }\n            });\n            context.api.order.create().then(function(data) {\n                // 调用一个不存在的函数, 触发一个js错误\n                notExistedFn();\n            })['catch'](function (error) {\n                if (window.console) {\n                    console.log(error.message);\n                    console.error(error.stack);\n                } else {\n                    C.log(error.message, error.stack);\n                }\n                done();\n            });\n        });\n\n        it('check global `resolve`', function (done) {\n            nattyFetch.setGlobal({\n                urlPrefix: host\n            });\n\n            nattyFetch.on('resolve', function (data, config) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n\n\n\n            let context = nattyFetch.context();\n            context.create('order', {\n                create: {\n                    url: 'api/order-create',\n                    method: 'POST'\n                }\n            });\n\n            context.api.order.create().then(function(data) {}, function () {});\n        });\n\n        it('check global `reject`', function (done) {\n            nattyFetch.setGlobal({\n                urlPrefix: host\n            });\n\n            nattyFetch.on('reject', function (error, config) {\n                try {\n                    expect(error.code).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n\n            let context = nattyFetch.context();\n            context.create('order', {\n                create: {\n                    url: 'api/return-error',\n                    method: 'POST'\n                }\n            });\n            context.api.order.create().then(function(data) {}, function () {});\n        });\n\n        it('check context `resolve`', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host\n            });\n\n            context.on('resolve', function (data, config) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n\n            context.create('order', {\n                create: {\n                    url: 'api/order-create',\n                    method: 'POST'\n                }\n            });\n            context.api.order.create().then(function(data) {\n            }, function () {\n\n            });\n        });\n\n        it('check context `reject`', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host\n            });\n\n            context.on('reject', function (error, config) {\n                try {\n                    expect(error.code).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n\n            context.create('order', {\n                create: {\n                    url: 'api/return-error',\n                    method: 'POST'\n                }\n            });\n            context.api.order.create().then(function(data) {}, function () {});\n        });\n\n        it('check both global and context `resolve`', function (done) {\n            let globalResolve = false;\n            nattyFetch.setGlobal({\n                urlPrefix: host\n            });\n\n            nattyFetch.on('resolve', function (content) {\n                //console.log(1, content);\n                globalResolve = true;\n            });\n\n            let context = nattyFetch.context({});\n\n            context.on('resolve', function (content) {\n                //console.log(2, content);\n                try {\n                    expect(globalResolve).to.be(true);\n                    expect(content.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n\n            context.create('order', {\n                create: {\n                    url: 'api/order-create',\n                    method: 'POST'\n                }\n            });\n            context.api.order.create().then(function(data) {}, function () {});\n        });\n\n        it('check both global and context `reject`', function (done) {\n            let globalReject = false;\n            nattyFetch.setGlobal({\n                urlPrefix: host\n            });\n\n            nattyFetch.on('reject', function (error) {\n                //console.log(1, error);\n                globalReject = true;\n            });\n\n\n            let context = nattyFetch.context({\n                urlPrefix: host\n            });\n\n            context.on('reject', function (error, config) {\n                //console.log(2, error);\n                try {\n                    expect(globalReject).to.be(true);\n                    expect(error.code).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n\n            context.create('order', {\n                create: {\n                    url: 'api/return-error',\n                    method: 'POST'\n                }\n            });\n            context.api.order.create().then(function(data) {}, function () {});\n        });\n\n    });\n\n    describe('api config', function () {\n        this.timeout(1000*10);\n        let context;\n\n        beforeEach('reset NattyDB context', function () {\n            context = nattyFetch.context({\n                urlPrefix: host,\n                jsonp: true,\n                mock: false\n            });\n        });\n\n        it('both object and function can be used as api\\'s config', function () {\n            context.create('order', {\n                // api 对应 配置\n                pay: {},\n                // api 对应 返回配置的函数\n                create: function () {\n                    return {}\n                }\n            });\n\n            expect(context.api.order).to.be.a('object');\n            expect(context.api.order.pay).to.be.a('function');\n            expect(context.api.order.create).to.be.a('function');\n        });\n\n        it('`mock` option', function () {\n            context.create('order', {\n                pay: {\n                    mock: true\n                },\n                create: {\n                    mock: false\n                },\n                close: {\n                    // 此处mock的值等于context.mock\n                }\n            });\n\n            expect(context.api.order.pay.config.mock).to.be(true);\n            expect(context.api.order.create.config.mock).to.be(false);\n            expect(context.api.order.close.config.mock).to.be(false);\n        });\n\n        it('`mock` value from global', function () {\n            let context = nattyFetch.context();\n            context.create('order', {\n                pay: {\n                    // 这个mock等于全局mock值\n                }\n            });\n\n            expect(context.api.order.pay.config.mock).to.be(false);\n        });\n\n\n        it('`mockUrlPrefix` value from context', function () {\n            let context  = nattyFetch.context({\n                // NOTE 当`mock`为true时, 才会处理`mockUrl`的值\n                mock: true,\n                mockUrlPrefix: './mock/'\n            });\n            context.create('order', {\n                pay: {\n                    mockUrl: 'pay'\n                },\n                create: {\n                    mockUrl: '../create'\n                },\n                close: {\n                    mockUrl: 'https://www.demo.com/close'\n                }\n            });\n\n            expect(context.api.order.pay.config.mockUrl).to.be('./mock/pay');\n            expect(context.api.order.create.config.mockUrl).to.be('../create');\n            expect(context.api.order.close.config.mockUrl).to.be('https://www.demo.com/close');\n        });\n\n        it('`jsonp` option', () => {\n            context.create('order', {\n                pay: {\n                    url: 'path'\n                },\n                transfer: {\n                    jsonp: false,\n                    url: 'path'\n                },\n                create: {\n                    url: 'path.jsonp'\n                },\n                close: {\n                    url: 'path.jsonp?foo'\n                },\n                delay: {\n                    mock: true,\n                    mockUrl: 'foo',\n                    jsonp: false, // mock为true时, jsonp的值不会根据url的值自动纠正\n                    url: 'path.jsonp?foo'\n                }\n            });\n\n            expect(context.api.order.pay.config.jsonp).to.be(true);\n            expect(context.api.order.transfer.config.jsonp).to.be(false);\n            expect(context.api.order.create.config.jsonp).to.be(true);\n            expect(context.api.order.close.config.jsonp).to.be(true);\n            expect(context.api.order.delay.config.jsonp).to.be(false);\n        });\n\n        it('auto `urlPrefix`', function () {\n            context.create('order', {\n                method1: {\n                    url: 'path'\n                },\n                method2: {\n                    url: '//foo.com/path'\n                },\n                method3: {\n                    url: 'http://foo.com/path'\n                },\n                method4: {\n                    url: 'https://foo.com/path'\n                },\n                method5: {\n                    url: './path'\n                },\n                method6: {\n                    url: '../path'\n                },\n                method7: {\n                    url: '/path'\n                }\n            });\n\n            expect(context.api.order.method1.config.url).to.equal(host + 'path');\n            expect(context.api.order.method2.config.url).to.be('//foo.com/path');\n            expect(context.api.order.method3.config.url).to.be('http://foo.com/path');\n            expect(context.api.order.method4.config.url).to.be('https://foo.com/path');\n            expect(context.api.order.method5.config.url).to.be('./path');\n            expect(context.api.order.method6.config.url).to.be('../path');\n            expect(context.api.order.method7.config.url).to.be('/path');\n        });\n    });\n\n    describe.skip('request config', function () {\n        this.timeout(1000*10);\n        let context;\n\n        beforeEach('reset', function () {\n            context = nattyFetch.context();\n        });\n        // 当使用request参数时, 只有data, retry, ignoreSelfConcurrent起作用\n        it('`request` config with success', function (done) {\n            let getPayId = (successFn) => {\n                setTimeout(function () {\n                    successFn({id: 1});\n                }, 200);\n            };\n            context.create('order', {\n                getSign: {\n                    data: {\n                        a: 1\n                    },\n                    request: function (vars, config, defer) {\n                        // 验证参数是否正确合并\n                        expect(vars.data.a).to.be(1);\n                        expect(vars.data.b).to.be(1);\n                        getPayId(function (content) {\n                            defer.resolve(content);\n                        });\n                    }\n                }\n            });\n\n            context.api.order.getSign({\n                b: 1\n            }).then(function (content) {\n                expect(content.id).to.be(1);\n                done();\n            });\n        });\n\n        it('`request` config with error', function (done) {\n            let getPayId = (successFn, errorFn) => {\n                setTimeout(function () {\n                    errorFn({message: 1});\n                }, 200);\n            };\n            context.create('order', {\n                getSign: {\n                    request: function (data, config, defer, retryTime) {\n                        getPayId(function (content) {\n                            defer.resolve(content);\n                        }, function (error) {\n                            defer.reject(error);\n                        });\n                    }\n                }\n            });\n\n            context.api.order.getSign().then(function (content) {\n            }, function (error) {\n                expect(error.message).to.be(1);\n                done();\n            });\n        });\n\n        it('`request` config with retry', function (done) {\n            let getPayId = (successFn, errorFn) => {\n                setTimeout(function () {\n                    errorFn({message: 1});\n                }, 200);\n            };\n            context.create('order', {\n                getSign: {\n                    retry: 1,\n                    request: function (data, config, defer, retryTime) {\n                        //console.log(retryTime);\n\n                        getPayId(function (content) {\n                            defer.resolve(content);\n                        }, function (error) {\n                            defer.reject(error);\n                        });\n                    }\n                }\n            });\n\n            context.api.order.getSign().then(function (content) {\n            }, function (error) {\n                expect(error.message).to.be(1);\n                done();\n            });\n        });\n\n        it('`request` config with ignoreSelfConcurrent', function (done) {\n            let count = 0;\n            let getPayId = (successFn, errorFn) => {\n                count++;\n                setTimeout(function () {\n                    errorFn({message:1});\n                }, 200);\n            };\n\n            context.create('order', {\n                getSign: {\n                    ignoreSelfConcurrent: true,\n                    request: function (data, config, defer, retryTime) {\n                        //console.log(retryTime);\n\n                        getPayId(function (content) {\n                            defer.resolve(content);\n                        }, function (error) {\n                            defer.reject(error);\n                        });\n                    }\n                }\n            });\n\n            context.api.order.getSign().then(function (content) {\n            }, function (error) {\n                expect(error.message).to.be(1);\n            });\n\n            context.api.order.getSign().then(function (content) {\n            }, function (error) {\n            });\n\n            setTimeout(function () {\n                expect(count).to.be(1);\n                done();\n            }, 1000);\n        });\n    });\n\n    describe('ajax', function() {\n        // NOTE 重要: 为了能够测试完整的场景, 默认已经全局关闭所有请求的浏览器缓存!!!  比如: ignoreSelfConcurrent\n        //nattyFetch.setGlobal({\n        //    cache: false,\n        //    traditional: true\n        //});\n\n        this.timeout(1000*10);\n        let context;\n\n        beforeEach('reset', function () {\n            context = nattyFetch.context({\n                urlPrefix: host,\n                mock: false\n            });\n        });\n\n        it('play with standard data structure', function (done) {\n\n            context.create('order', {\n                create: {\n                    url: 'api/order-create',\n                    method: 'POST',\n                    //traditional: true\n                }\n            });\n\n            context.api.order.create().then(function(data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('play with non-standard data structure by `fit`', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/order-create-non-standard',\n                    method: 'POST',\n                    fit: function (response) {\n                        return {\n                            success: !response.hasError,\n                            content: response.content\n                        };\n                    }\n                }\n            });\n            context.api.order.create().then(function(data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('process data', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/order-create',\n                    method: 'POST',\n                    process: function (response) {\n                        return {\n                            orderId: response.id\n                        };\n                    }\n                }\n            });\n            context.api.order.create().then(function(data) {\n                try {\n                    expect(data.orderId).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        // 固定参数和动态参数 在process和fix方法中都可以正确获取到\n        it('`vars.data` in process or fix method', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/order-create',\n                    method: 'POST',\n                    data: {\n                        fixData: 1\n                    },\n                    willFetch: function (vars, config) {\n                        vars.data.hookData = 1;\n                        // console.log(vars);\n                        // console.log(config);\n                        // console.log(this);\n                    },\n                    process: function (content, vars) {\n                        expect(vars.data.fixData).to.be(1);\n                        expect(vars.data.liveData).to.be(1);\n                        expect(vars.data.hookData).to.be(1);\n                        return {\n                            orderId: content.id\n                        };\n                    },\n                    fit: function (response, vars) {\n                        expect(vars.data.fixData).to.be(1);\n                        expect(vars.data.liveData).to.be(1);\n                        expect(vars.data.hookData).to.be(1);\n                        return response;\n                    }\n                }\n            });\n\n            context.api.order.create({\n                liveData: 1\n            }).then(function(data) {\n                try {\n                    expect(data.orderId).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n\n        it('skip process data when it is mocking ', function (done) {\n            context.create('order', {\n                create: {\n                    mock: true,\n                    mockUrl: host + 'api/order-create',\n                    process: function (response) {\n                        if (this.mock) {\n                            return response;\n                        } else {\n                            return {\n                                orderId: response.id\n                            };\n                        }\n                    }\n                }\n            });\n            context.api.order.create().then(function(data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('error by requesting cross-domain with disabled header [NOTE: IE的行为已被标准化]', function (done) {\n            context.create('order', {\n                create: {\n                    //log: true,\n                    url: host + 'api/order-create',\n                    method: 'POST',\n                    header: {foo: 'foo'} // 跨域时, 自定义的`header`将被忽略\n                }\n            });\n\n            context.api.order.create().then(function (data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch (e) {\n                    done(e.message);\n                }\n            }, function(error) {\n                // can not go here\n            });\n        });\n\n        it('error by timeout', function (done) {\n            context.create('order', {\n                create: {\n                    //log: true,\n                    url: host + 'api/timeout',\n                    method: 'POST',\n                    timeout: 100\n                }\n            });\n            context.api.order.create().then(function () {\n                // can not go here\n            }, function(error) {\n                try {\n                    expect(error.timeout).to.be(true);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('pending status checking', function (done) {\n            context.create('order', {\n                create: {\n                    //log: true,\n                    url: host + 'api/timeout',\n                    method: 'POST',\n                    timeout: 200\n                }\n            });\n            context.api.order.create().then(function () {\n                // can not go here\n            }, function(error) {\n                try {\n                    expect(context.api.order.create.pending).to.be(false);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n            expect(context.api.order.create.pending).to.be(true);\n        });\n\n        it('error by 500', function (done) {\n            context.create('order', {\n                create: {\n                    //log: true,\n                    url: host + 'api/500',\n                    method: 'POST'\n                }\n            });\n            context.api.order.create().then(function () {\n                // can not go here\n            }, function(error) {\n                try {\n                    expect(error.status).to.be(nattyFetch.ajax.fallback ? undefined : 500);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('error by 404', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/404',\n                    method: 'POST'\n                }\n            });\n\n            // TODO\n            context.on('reject', function (error) {\n                console.warn(error);\n            })\n            context.api.order.create().then(function () {\n                // can not go here\n            })['catch'](function (error) {\n                try {\n                    if (!nattyFetch.ajax.fallback) {\n                        // 即使是现代浏览器,也有status为0的情况\n                        expect(error.status === 0 || error.status === 404).to.be(true);\n                    } else {\n                        expect(error.status).to.be(undefined);\n                    }\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('`GET` resolving after retry', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/retry-success',\n                    method: 'GET',\n                    retry: 2\n                }\n            });\n\n            context.api.order.create().then(function (data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            }, function() {\n                // can not go here\n            });\n        });\n\n        it('`GET` with fn-data resolving after retry', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/retry-success',\n                    method: 'GET',\n                    retry: 2\n                }\n            });\n\n            let count = 0;\n\n            context.api.order.create(function () {\n                return {\n                    count: count++\n                }\n            }).then(function (data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            }, function() {\n                // can not go here\n            });\n        });\n\n        it('`POST` resolving after retry', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/retry-success',\n                    method: 'POST',\n                    retry: 2\n                }\n            });\n\n            context.api.order.create().then(function (data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            }, function() {\n                // can not go here\n            });\n        });\n\n        it('rejecting after retry', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/return-error',\n                    retry: 1\n                }\n            });\n            context.api.order.create().then(function (data) {\n                // can not go here\n            }, function(error) {\n                try {\n                    expect(error.code).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        // 连发两次请求，第二次应该被忽略\n        it('ignore seft concurrent', function (done) {\n\n            context.create('order', {\n                create: {\n                    cache: false,\n                    url: host + 'api/timeout', // 请求延迟返回的接口\n                    ignoreSelfConcurrent: true\n                }\n            });\n\n            context.api.order.create().then(function (data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch (e) {\n                    done(e);\n                }\n            });\n\n            // 第一次请求未完成之前 第二次请求返回的是一个伪造的promise对象\n            let dummyPromise = context.api.order.create().then(function(){\n                throw new Error('unexpected `resolved`');\n            });\n            expect(dummyPromise).to.have.property('dummy');\n\n            // 伪造的promise对象要保证支持链式调用\n            expect(dummyPromise.then()).to.be(dummyPromise);\n            expect(dummyPromise.then().catch()).to.be(dummyPromise);\n        });\n\n        // 连发两次请求, 第二次请求发起时, 如果第一次请求还没有返回, 则取消掉第一次请求(即: 返回时不响应)\n        it('override seft concurrent(XHR)', function (done) {\n\n            context.create('order', {\n                create: {\n                    cache: false,\n                    url: host + 'api/timeout', // 请求延迟返回的接口\n                    overrideSelfConcurrent: true,\n                    process: function(content, vars) {\n                        // vars不应该混淆\n                        expect(vars.data.d).to.be(2);\n                    }\n                }\n            });\n\n            let count = 0;\n\n            // 第一次请求, 不应该有响应\n            context.api.order.create({\n                d: 1\n            }).then(function (data) {\n                count++\n            });\n\n            // 第二次请求, 只响应这次请求\n            setTimeout(function(){\n                context.api.order.create({\n                    d:2\n                }).then(function (data) {\n                    try {\n                        expect(count).to.be(0);\n                        done();\n                    } catch (e) {\n                        done(e);\n                    }\n                });\n            }, 300);\n        });\n\n        // 连发两次请求, 第二次请求发起时, 如果第一次请求还没有响应, 则取消掉第一次请求(的响应)\n        it('override seft concurrent(JSONP)', function (done) {\n\n            context.create('order', {\n                create: {\n                    cache: false,\n                    jsonp: true,\n                    url: host + 'api/jsonp-timeout', // 请求延迟返回的接口\n                    overrideSelfConcurrent: true,\n                    process: function(content, vars) {\n                        // vars不应该混淆\n                        expect(vars.data.d).to.be(2);\n                    }\n                }\n            });\n\n            let count = 0;\n\n            // 第一次请求, 不应该有响应\n            context.api.order.create({\n                d: 1\n            }).then(function (data) {\n                count++\n            });\n\n            // 第二次请求, 只响应这次请求\n            setTimeout(function(){\n                context.api.order.create({\n                    d:2\n                }).then(function (data) {\n                    try {\n                        expect(count).to.be(0);\n                        done();\n                    } catch (e) {\n                        done(e);\n                    }\n                });\n            }, 300);\n        });\n    });\n\n\n    describe('jsonp', function () {\n        // NOTE 重要: 为了能够测试完整的场景, 默认已经全局关闭所有请求的浏览器缓存!!!  比如: ignoreSelfConcurrent\n        //nattyFetch.setGlobal({\n        //    cache: false\n        //});\n\n        this.timeout(1000*10);\n        let context;\n\n        beforeEach('reset', function () {\n            context = nattyFetch.context({\n                urlPrefix: host,\n                mock: false\n            });\n        });\n\n        it('check default jsonpCallbackQuery', function () {\n            context.create('order', {\n                create: {\n                    url: host + 'api/order-create',\n                    jsonp: true\n                }\n            });\n\n            expect(context.api.order.create.config.jsonpCallbackQuery).to.be(undefined);\n        });\n\n        it('check custom jsonpCallbackQuery', function () {\n            context.create('order', {\n                create: {\n                    url: host + 'api/order-create',\n                    jsonp: [true, 'cb', 'j{id}']\n                }\n            });\n\n            expect(context.api.order.create.config.jsonp).to.be(true);\n            expect(context.api.order.create.config.jsonpFlag).to.be('cb');\n            expect(context.api.order.create.config.jsonpCallbackName).to.be('j{id}');\n        });\n\n        it('auto detect jsonp option', function () {\n            context.create('order', {\n                create: {\n                    url: host + 'api/order-create.jsonp'\n                }\n            });\n\n            expect(context.api.order.create.config.jsonp).to.be(true);\n        });\n\n        it('jsonp response.success is true', function (done) {\n            context.create('order', {\n                create: {\n                    traditional: true,\n                    data: {\n                        a: [1,2,3]\n                    },\n                    //log: true,\n                    url: host + 'api/jsonp-order-create',\n                    jsonp: true\n                }\n            });\n\n            context.api.order.create().then(function (data) {\n\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch (e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('jsonp response.success is false ', function (done) {\n            context.create('order', {\n                create: {\n                    //log: true,\n                    url: host + 'api/jsonp-order-create-error',\n                    jsonp: true\n                }\n            });\n\n            context.api.order.create().then(function (data) {\n                // can not go here\n            }, function (error) {\n                try {\n                    expect(error).to.have.property('message');\n                    done();\n                } catch (e) {\n                    done(e);\n                }\n            });\n        });\n\n        // jsonp无法使用状态吗识别出具体的404、500等错误，都统一成`无法连接`的错误信息\n        it('jsonp with error url', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'error-url',\n                    jsonp: true\n                }\n            });\n\n            // TODO\n            context.on('reject', function (error) {\n                console.warn(error);\n            });\n\n            context.api.order.create().then(function (data) {\n                // can not go here\n            }, function (error) {\n                try {\n                    expect(error.message).to.contain('Not Accessable JSONP');\n                    done();\n                } catch (e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('jsonp timeout', function (done) {\n            context.create('order', {\n                create: {\n                    //log: true,\n                    url: host + 'api/jsonp-timeout',\n                    jsonp: true,\n                    timeout: 300\n                }\n            });\n            context.api.order.create().then(function () {\n                // can not go here\n            }, function(error) {\n                try {\n                    expect(error.timeout).to.be(true);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('`JSONP` resolving after retry', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/jsonp-retry-success',\n                    jsonp: true,\n                    retry: 2\n                }\n            });\n\n            context.api.order.create().then(function (data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            }, function() {\n                // can not go here\n            });\n        });\n\n        it('rejecting after retry', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/jsonp-error',\n                    jsonp: true,\n                    retry: 1\n                }\n            });\n            context.api.order.create().then(function (data) {\n                // can not go here\n            }, function(error) {\n                try {\n                    expect(error.code).to.be(1);\n                    done();\n                } catch(e) {\n                    done(e);\n                }\n            });\n        });\n\n        it('ignore self concurrent', function (done) {\n            context.create('order', {\n                create: {\n                    url: host + 'api/jsonp-timeout', // 请求延迟返回的接口\n                    jsonp: true,\n                    ignoreSelfConcurrent: true\n                }\n            });\n\n            // 连发两次请求，第二次应该被忽略\n            context.api.order.create().then(function (data) {\n                try {\n                    expect(data.id).to.be(1);\n                    done();\n                } catch (e) {\n                    done(e);\n                }\n            });\n\n            // 第一次请求未完成之前 第二次请求返回的是一个伪造的promise对象\n            let dummyPromise = context.api.order.create();\n            expect(dummyPromise).to.have.property('dummy');\n\n            // 伪造的promise对象要保证支持链式调用\n            expect(dummyPromise.then()).to.be(dummyPromise);\n            expect(dummyPromise.then().catch()).to.be(dummyPromise);\n        });\n    });\n\n});\n","const {\n    appendQueryString, isAbsoluteUrl, isNumber,\n    param, decodeParam, isIE, isCrossDomain,\n    sortPlainObjectKey\n} = nattyFetch._util;\n\ndescribe('./util', function () {\n    describe('param', function () {\n        it(\"{a:'b c', d:['e+f',{g:'h', i:['j','k']}]}\", function () {\n            expect(decodeParam(param({a:'b c', d:['e+f',{g:'h', i:['j','k']}], l:true, m:0})))\n                .to.be(\"a=b c&d[]=e+f&d[1][g]=h&d[1][i][]=j&d[1][i][]=k&l=true&m=0\");\n        });\n        it(\"{ id: function(){ return 1 + 2 } }\", function () {\n            expect(param({ id: function(){ return 1 + 2 } })).to.be('id=3');\n        });\n        it(\"param({ foo: 'bar', nested: { will: 'be ignored' }}, true)\", function () {\n            expect(decodeParam(param({ foo: 'bar', nested: { will: 'be ignored' }}, true)))\n                .to.be(\"foo=bar&nested=[object Object]\");\n        });\n        it(\"param({ foo: [1, 2]}, true)\", function () {\n            expect(decodeParam(param({ foo: [1, 2]}, true))).to.be(\"foo=1&foo=2\");\n        });\n        it(\"param({ foo: [1, 2]})\", function () {\n            expect(decodeParam(param({ foo: [1, 2]}))).to.be(\"foo[]=1&foo[]=2\");\n        });\n    });\n    describe('appendQueryString', function () {\n        it(\"appendQueryString('./p', {})\", function () {\n            expect(appendQueryString('./p', {})).to.be('./p');\n        });\n        it(\"appendQueryString('./p', {foo:'foo'})\", function () {\n            expect(appendQueryString('./p', {foo:'foo'})).to.be('./p?foo=foo');\n        });\n        it(\"appendQueryString('./p?bar=bar', {foo:'foo'})\", function () {\n            expect(appendQueryString('./p?bar=bar', {foo:'foo'})).to.be('./p?bar=bar&foo=foo');\n         });\n    });\n    describe('isAbsoluteUrl', function () {\n        it('`https://path` should be a absolute url', function () {\n            expect(isAbsoluteUrl('https://path')).to.be(true);\n        });\n        it('`http://path` should be a absolute url', function () {\n            expect(isAbsoluteUrl('http://path')).to.be(true);\n        });\n        it('`//path` should be a absolute url', function () {\n            expect(isAbsoluteUrl('//path')).to.be(true);\n        });\n        it('`path//path` should not be a absolute url', function () {\n            expect(isAbsoluteUrl('foo//path')).to.be(false);\n        });\n    });\n    describe('isNumber', function () {\n        it('NaN', function () {\n            expect(isNumber(NaN)).to.be(false);\n        });\n        it('1', function () {\n            expect(isNumber(1)).to.be(true);\n        })\n    });\n\n    describe('protocol', function(){\n\n        it('location protocol', function () {\n            let link = document.createElement('a');\n            link.href = location.href;\n            expect(link.protocol).to.be('http:');\n        });\n\n        it('foo.json protocol (IE diff)', function () {\n            let link = document.createElement('a');\n            link.href = 'foo.json';\n            expect(link.protocol).to.be(isIE ? ':' : 'http:');\n        });\n\n        it('//www.foo.com/json protocol (IE diff)', function () {\n            let link = document.createElement('a');\n            link.href = '//www.foo.com/json';\n            expect(link.protocol).to.be(isIE ? ':' : 'http:');\n        });\n\n        it('https://www.foo.com/json protocol', function () {\n            let link = document.createElement('a');\n            link.href = 'https://www.foo.com/json';\n            expect(link.protocol).to.be('https:');\n        });\n    });\n\n    describe('hostname', function(){\n\n        let originA = document.createElement('a');\n        originA.href = location.href;\n\n        it('location hostname', function () {\n            let link = document.createElement('a');\n            link.href = location.href;\n            expect(link.hostname).to.be(originA.hostname);\n        });\n\n        it('foo.json hostname (IE diff)', function () {\n            let link = document.createElement('a');\n            link.href = 'foo.json';\n            expect(link.hostname).to.be(isIE ? '' : originA.hostname);\n        });\n\n        it('//www.foo.com/json hostname', function () {\n            let link = document.createElement('a');\n            link.href = '//www.foo.com/json';\n            expect(link.hostname).to.be('www.foo.com');\n        });\n\n        it('https://www.foo.com/json hostname', function () {\n            let link = document.createElement('a');\n            link.href = 'https://www.foo.com/json';\n            expect(link.hostname).to.be('www.foo.com');\n        });\n    });\n\n    describe('isCrossDomain', function(){\n        let originA = document.createElement('a');\n        originA.href = location.href;\n\n        it('foo.json', function () {\n            expect(isCrossDomain('foo.json')).to.be(false);\n        });\n\n        it('../foo.json', function () {\n            expect(isCrossDomain('../foo.json')).to.be(false);\n        });\n\n        it('www.foo.com/json', function () {\n            expect(isCrossDomain('www.foo.com/json')).to.be(false);\n        });\n\n        it('//www.foo.com/json', function () {\n            expect(isCrossDomain('//www.foo.com/json')).to.be(true);\n        });\n\n        it('absolute path', function () {\n            expect(isCrossDomain(originA.protocol + '//' + originA.hostname + ':' + originA.port)).to.be(false);\n        });\n\n        it('different protocal', function () {\n            expect(isCrossDomain('https://' + originA.hostname)).to.be(true);\n        });\n\n        it('different port', function () {\n            expect(isCrossDomain(originA.protocol + '//' + originA.hostname + ':9876')).to.be(true);\n        });\n\n        it('https://www.foo.com/json', function () {\n            expect(isCrossDomain('https://www.foo.com/json')).to.be(true);\n        });\n    });\n\n    describe('isSameQueryStringFromObject', function () {\n\n        let isSameQueryStringFromObject = (obj1, obj2) => {\n            return JSON.stringify(sortPlainObjectKey(obj1)) === JSON.stringify(sortPlainObjectKey(obj2));\n        };\n\n        it('turn to the same query string', function () {\n            // 两个对象, 只有键的顺序不一样, 应该转出一样的`query string`\n            expect(isSameQueryStringFromObject({\n                c: 'c',\n                b: 'b',\n                a: {\n                    c:'c',\n                    a:'a'\n                },\n                d: ['b', 'a']\n            }, {\n                b: 'b',\n                c: 'c',\n                d: ['b', 'a'],\n                a: {\n                    a:'a',\n                    c:'c'\n                }\n            })).to.be(true);\n        });\n    })\n});\n","\nfunction ExpectAction() {\n    this.reset();\n}\n\nExpectAction.prototype.do = function (action) {\n    this.actualEvents.push(action);\n}\n\nExpectAction.prototype.count = function () {\n    this.count++;\n}\n\nExpectAction.prototype.expect = function (events) {\n    this.expectEvents = events;\n}\n\nExpectAction.prototype.reset = function () {\n    var t = this;\n    t.expectEvents = [];\n    t.actualEvents = [];\n    t.count = 0;\n}\n\nExpectAction.prototype.check = function () {\n    expect(this.actualEvents).to.eql(this.expectEvents);\n}\n\nexport default ExpectAction;","import ExpectAction from './expect-action'\nimport {host} from '../config/host'\nconst {ajax} = nattyFetch;\n\ndescribe('./ajax', function () {\n\n    describe('dependent detects', function () {\n        it('support `CORS`', function () {\n            expect(nattyFetch.ajax.supportCORS).to.be(true);\n        });\n    });\n\n    describe('browser detects：NOT used in nattyFetch', function () {\n        let xhr = new XMLHttpRequest();\n\n        let methods = ['loadstart', 'load', 'progress', 'error', 'timeout'];\n\n        methods.forEach(function (method) {\n            it('support `' + method + '` event: ' + ('on' + method in xhr), function () {\n                \n            });\n        });\n\n        // http://enable-cors.org/index.html\n        it('support `CORS`: ' + ('withCredentials' in xhr), function () {\n            \n        });\n    });\n\n    describe('post', function () {\n        it('accept text', function (done) {\n            ajax({\n                url: host + 'api/return-text',\n                method: 'POST',\n                data: {\n                    'return-text': 1\n                },\n                success: function (res, xhr) {\n                    expect(res).to.be('text');\n                    done();\n                }\n            });\n        });\n\n        it('accept json', function (done) {\n            ajax({\n                url: host + 'api/return-json',\n                method: 'POST',\n                data: {\n                    'return-json': 1\n                },\n                accept: 'json',\n                success: function (res, xhr) {\n                    expect(res).to.eql({tool: 'natty-fetch'});\n                    done();\n                }\n            });\n        });\n\n        it('accept script', function (done) {\n            ajax({\n                url: host + 'api/return-script',\n                method: 'POST',\n                data: {\n                    'return-script': 1\n                },\n                accept: 'script',\n                success: function (res, xhr) {\n                    expect(__test__).to.be(1);\n                    window.__test__ = null;\n                    done();\n                }\n            });\n        });\n    });\n\n\n    describe('event', function () {\n        let ea = new ExpectAction();\n\n        beforeEach('reset expectEvents', function () {\n            ea.reset();\n        });\n\n        afterEach('check expectEvents', function () {\n            ea.check();\n        });\n\n        it('should trigger success and complete', function (done) {\n\n            ea.expect(['success', 'complete']);\n\n            ajax({\n                url: host + 'api/return-json',\n                method: 'POST',\n                data: {\n                    'return-json-success': 1\n                },\n                success: function (res, xhr) {\n                    ea.do('success');\n                },\n                complete: function () {\n                    ea.do('complete');\n                    done();\n                }\n            });\n        });\n\n        it('should trigger success and complete when request the cross-domain with disabled header', function (done) {\n\n            ea.expect(['success', 'complete']);\n\n            ajax({\n                //log: true,\n                url: host + 'api/return-json',\n                method: 'POST',\n                data: {\n                    'cross-domain-with-disabled-header': 1\n                },\n                // 使用不合法的Header来触发跨域失败\n                header: {foo: 'foo'},\n                accept: 'json',\n                success: function (status, xhr) {\n                    ea.do('success');\n                },\n                complete: function () {\n                    ea.do('complete');\n                    done();\n                }\n            });\n        });\n\n        it('should trigger error and complete when 500', function (done) {\n\n            ea.expect(['error', 'complete']);\n\n            ajax({\n                //log: true,\n                url: host + 'api/500',\n                method: 'POST',\n                accept: 'json',\n                error: function (status, xhr) {\n                    ea.do('error');\n                },\n                complete: function () {\n                    ea.do('complete');\n                    done();\n                }\n            });\n        });\n\n        it('should trigger error and complete when 404', function (done) {\n            ea.expect(['error', 'complete']);\n\n            ajax({\n                //log: true,\n                url: host + 'api/404',\n                method: 'POST',\n                accept: 'json',\n                error: function (status, xhr) {\n                    ea.do('error');\n                },\n                complete: function () {\n                    ea.do('complete');\n                    done();\n                }\n            });\n        });\n\n        it('should trigger abort and complete when request is aborted', function (done) {\n\n            ea.expect(['abort', 'complete']);\n\n            var xhr = ajax({\n                //log: true,\n                url: host + 'api/abort',\n                method: 'POST',\n                abort: function () {\n                    ea.do('abort');\n                },\n                complete: function () {\n                    ea.do('complete');\n                }\n            });\n            setTimeout(function () {\n                xhr.abort();\n                done();\n            }, 100);\n        });\n\n        it('calling `abort` after `complete` event should be ignored', function (done) {\n            this.timeout(5000);\n            ea.expect(['success', 'complete']);\n\n            var xhr = ajax({\n                log: true,\n                url: host + 'api/return-json',\n                method: 'POST',\n                success: function () {\n                    ea.do('success');\n                },\n                complete: function () {\n                    ea.do('complete');\n                }\n            });\n            setTimeout(function () {\n                xhr.abort();\n                done();\n            }, 1000);\n        });\n    });\n});\n\n","import {host} from '../config/host'\n\ndescribe('./hooks', function(){\n\n    describe('willFetch', function(){\n\n        this.timeout(1000*60);\n\n        it('ajax willFetch call', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host,\n                willFetch() {\n                    done()\n                }\n            })\n            context.create({\n                getApi: {\n                    url: 'api/return-json',\n                    fit(resp) {\n                        return {\n                            success: true,\n                            content: resp\n                        }\n                    }\n                }\n            })\n            context.api.getApi().then((content) => {})\n        })\n\n        it('jsonp willFetch call', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host,\n                willFetch() {\n                    done()\n                }\n            })\n            context.create({\n                getApi: {\n                    url: 'api/jsonp-order-create',\n                    jsonp: true,\n                    fit(resp) {\n                        return resp\n                    }\n                }\n            })\n            context.api.getApi().then((content) => {})\n        })\n\n    })\n\n    describe('didFetch', function(){\n\n        it('ajax success didFetch', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host\n            })\n            context.create({\n                getApi: {\n                    url: 'api/return-json',\n                    fit(resp) {\n                        return {\n                            success: true,\n                            content: resp\n                        }\n                    },\n                    didFetch(config) {\n                        //console.log(config)\n                        done()\n                    }\n                }\n            })\n            context\n                .api\n                .getApi()\n                .then((content) => {\n                })\n        })\n\n        it('jsonp success didFetch long time', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host\n            })\n            context.create({\n                getApi: {\n                    url: 'api/jsonp-timeout',\n                    jsonp: true,\n                    timeout: 2000,\n                    fit(resp) {\n                        return {\n                            success: true,\n                            content: resp\n                        }\n                    },\n                    didFetch(config) {\n                        //console.log(config)\n                        done()\n                    }\n                }\n            })\n            context\n                .api\n                .getApi()\n                .then((content) => {\n                })\n        })\n\n        it('ajax error didFetch', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host\n            })\n            context.create({\n                getApi: {\n                    url: 'api/return-error',\n                    fit(resp) {\n                        return resp\n                    },\n                    didFetch(config) {\n                        //console.log(config)\n                        done()\n                    }\n                }\n            })\n            context\n                .api\n                .getApi()\n                .then((content) => {\n                }, (reason) => {\n                    //console.log(reason)\n                })\n        })\n\n        it('jsonp error didFetch', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host,\n                jsonp: true\n            })\n            context.create({\n                getApi: {\n                    url: 'api/jsonp-order-create-error',\n                    fit(resp) {\n                        return resp\n                    },\n                    didFetch(config) {\n                        //console.log(config)\n                        done()\n                    }\n                }\n            })\n            context\n                .api\n                .getApi()\n                .then((content) => {\n                }, (reason) => {\n                    //console.log(reason)\n                })\n        })\n\n        it('ajax timeout should NOT fire `didFetch`', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host,\n                timeout: 300\n            });\n            let count = 0;\n            context.create({\n                getApi: {\n                    url: 'api/timeout',\n                    didFetch() {\n                        // timeout时不应该调用didFetch\n                        count++\n                    }\n                }\n            });\n\n            context.api.getApi().then(function () {\n\n            }).catch(function () {\n                try {\n                    expect(count).to.be(0);\n                    done();\n                } catch (e) {\n                    done(e);\n                }\n            });\n        })\n\n        it('jsonp timeout should NOT fire `didFetch`', function (done) {\n            let context = nattyFetch.context({\n                urlPrefix: host,\n                jsonp: true,\n                timeout: 300\n            });\n\n            let count = 0;\n            context.create({\n                getApi: {\n                    url: 'api/jsonp-timeout',\n                    didFetch() {\n                        // timeout时不应该调用didFetch\n                        count++\n                    }\n                }\n            });\n\n            context.api.getApi().then(function () {\n\n            }).catch(function () {\n                try {\n                    expect(count).to.be(0);\n                    done();\n                } catch (e) {\n                    done(e);\n                }\n            });\n        })\n\n    })\n\n})\n","import {host} from '../config/host'\n\ndescribe('storage', function () {\n\n    this.timeout(1000*10);\n    let context;\n\n    beforeEach('reset', function () {\n        context = nattyFetch.context({\n            urlPrefix: host,\n            mock: false,\n        });\n    });\n\n    it('query string is same: localStorage', function (done) {\n        let requestTime = 0;\n        context.create('user', {\n            getPhone: {\n                url: host + 'api/return-success',\n                willFetch: function (vars, config, from) {\n                    if (from === 'remote') {\n                        requestTime++;\n                    }\n                },\n                storage: {\n                    type: 'localStorage',\n                    tag: 'v1.0',\n                    key: 'test-query-string'\n                }\n            }\n        });\n\n        // 第一次请求走网络\n        context.api.user.getPhone({\n            b:1,\n            a:1\n        }).then(function (r) {\n            // 第二次请求走storage\n            return context.api.user.getPhone({\n                a:1,\n                b:1\n            });\n        }).then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                expect(requestTime).to.be(1);\n                done();\n            } catch (e) {\n                done(e);\n            }\n            // 特别注意 expect不管是否成功, 都要销毁storage, 避免下次刷新后的测试\n            context.api.user.getPhone.storage.destroy();\n\n        }).catch();\n    });\n\n    it('query string is same: sessionStorage', function (done) {\n        let requestTime = 0;\n        context.create('user', {\n            getPhone: {\n                url: host + 'api/return-success',\n                willFetch: function (vars, config, from) {\n                    if (from === 'remote') {\n                        requestTime++;\n                    }\n                },\n                storage: {\n                    type: 'sessionStorage',\n                    tag: 'v1.0'\n                }\n            }\n        });\n\n        // 第一次请求走网络\n        context.api.user.getPhone({\n            b:1,\n            a:1\n        }).then(function (r) {\n            // 第二次请求走storage\n            return context.api.user.getPhone({\n                a:1,\n                b:1\n            });\n        }).then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                expect(requestTime).to.be(1);\n                done();\n            } catch (e) {\n                done(e);\n            }\n            // 特别注意 expect不管是否成功, 都要销毁storage, 避免下次刷新后的测试\n            context.api.user.getPhone.storage.destroy();\n\n        }).catch();\n    });\n\n    //\n    it('query string is same: variable', function (done) {\n        let requestTime = 0;\n        context.create('user', {\n            getPhone: {\n                url: host + 'api/return-success',\n                willFetch: function (vars, config, from) {\n                    if (from === 'remote') {\n                        requestTime++;\n                    }\n                },\n                storage: {\n                    type: 'variable',\n                    tag: 'v1.0'\n                }\n            }\n        });\n\n        // 第一次请求走网络\n        context.api.user.getPhone({\n            b:1,\n            a:1\n        }).then(function (r) {\n            // 第二次请求走storage\n            return context.api.user.getPhone({\n                a:1,\n                b:1\n            });\n        }).then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                expect(requestTime).to.be(1);\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }).catch();\n    });\n\n    it('query string is same with jsonp', function (done) {\n        let requestTime = 0;\n        context.create('user', {\n            getPhone: {\n                jsonp: true,\n                url: host + 'api/jsonp-order-create',\n                willFetch: function (vars, config, from) {\n                    if (from === 'remote') {\n                        requestTime++;\n                    }\n                },\n                storage: {\n                    type: 'localStorage',\n                    tag: 'v1.0',\n                    key: 'test-jsonp-with-storage'\n                }\n            }\n        });\n\n        // 第一次请求走网络\n        context.api.user.getPhone({\n            b:1,\n            a:1\n        }).then(function (r) {\n            // 第二次请求走storage\n            return context.api.user.getPhone({\n                a:1,\n                b:1\n            });\n        }).then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                expect(requestTime).to.be(1);\n                done();\n            } catch (e) {\n                done(e);\n            }\n            // 特别注意 expect不管是否成功, 都要销毁storage, 避免下次刷新后的测试\n            context.api.user.getPhone.storage.destroy();\n        }).catch();\n    });\n\n    it('query string is different', function (done) {\n        let requestTime = 0;\n        context.create({\n            get: {\n                url: host + 'api/return-success',\n                willFetch: function (vars, config, from) {\n                    if (from === 'remote') {\n                        requestTime++;\n                    }\n                },\n                storage: true\n            }\n        });\n\n        // 第一次请求走网络\n        context.api.get({\n            b:1,\n            a:1\n        }).then(function () {\n            // 第二次请求, 参数不一样, 依然走网络\n            return context.api.get({\n                a:1\n            });\n        }).then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                expect(requestTime).to.be(2);\n                done();\n            } catch (e) {\n                done(e);\n            }\n            // 特别注意 expect不管是否成功, 都要销毁storage, 避免下次刷新后的测试\n            context.api.get.storage.destroy();\n        }).catch();\n    });\n\n\n    it('no query string', function (done) {\n        let requestTime = 0;\n        context.create({\n            get: {\n                url: host + 'api/return-success',\n                willFetch: function (vars, config, from) {\n                    if (from === 'remote') {\n                        requestTime++;\n                    }\n                },\n                storage: true\n            }\n        });\n\n        // 第一次请求走网络\n        context.api.get().then(function () {\n            // 第二次请求, 走storage\n            return context.api.get();\n        }).then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                expect(requestTime).to.be(1);\n                done();\n            } catch (e) {\n                done(e);\n            }\n            // 特别注意 expect不管是否成功, 都要销毁storage, 避免下次刷新后的测试\n            context.api.get.storage.destroy();\n        }).catch();\n    });\n\n    it('`POST` request with `storage` on should throw an error', function () {\n        let requestTime = 0;\n        let errorFn = function () {\n            context.create({\n                get: {\n                    url: host + 'api/return-success',\n                    method: 'POST',\n                    storage: true\n                }\n            })\n        }\n        expect(errorFn).to.throwError();\n    });\n});","import {host} from '../config/host'\n\n\ndescribe('plugin', function () {\n\n    it('options.plugins should been merged, NOT overrided.', function () {\n\n        let context = nattyFetch.context({\n            urlPrefix: host,\n            plugins: [\n                nattyFetch.plugin.soon\n            ]\n        });\n\n        context.create({\n            foo: {\n                url: host + 'api/return-success',\n                plugins: [\n                    nattyFetch.plugin.loop\n                ]\n            }\n        });\n\n        expect(context.api.foo.soon).to.be.a('function');\n        expect(context.api.foo.loop).to.be.a('function');\n    });\n});","import {host} from '../config/host'\n\ndescribe('plugin soon', function () {\n    it('`soon` method with `storage` is open', function (done) {\n        let context = nattyFetch.context({\n            urlPrefix: host,\n            mock: false\n        });\n\n        let outerCount = 0;\n        let innerCount = 0;\n        let requestCount = 0;\n\n        context.create({\n            'foo.get': {\n                url: host + 'api/return-stamp',\n                storage: true,\n                willFetch: function (vars, config, from) {\n                    if (from === 'remote') {\n                        requestCount++;\n                    }\n                },\n                plugins: [\n                    nattyFetch.plugin.soon\n                ]\n            }\n        });\n\n        // 外层请求, 首次请求没有storage缓存, success回调只应该执行一次, 数据来自远程服务器\n        let outerData;\n        let innerDataFromStorage;\n        \n        context.api.foo.get.soon({\n            q: 1\n        }, function (data) {\n            outerCount++;\n            outerData = data;\n            // console.log('data', JSON.stringify(data));\n            // 内层请求, 参数一致, 应该有storage缓存, success回调应该执行2次,\n            context.api.foo.get.soon({\n                q:1\n            }, function (data2) {\n                innerCount++;\n                if (innerCount === 1) {\n                    innerDataFromStorage = data2;\n                }\n                // console.log('data2', JSON.stringify(data2));\n            });\n        }, function (e) {\n            done(e);\n        });\n\n        setTimeout(function () {\n            try {\n                expect(outerCount).to.be(1);\n                expect(innerCount).to.be(2);\n                expect(requestCount).to.be(2);\n                expect(outerData.fromStorage).to.be(false);\n                expect(innerDataFromStorage.fromStorage).to.be(true);\n                expect(JSON.stringify(outerData.content)).to.be(JSON.stringify(innerDataFromStorage.content));\n                context.api.foo.get.storage.destroy();\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }, 800);\n    });\n\n    it('`soon` method with `storage` is closed', function (done) {\n\n        let context = nattyFetch.context({\n            urlPrefix: host,\n            mock: false\n        });\n\n        let outerCount = 0;\n        let innerCount = 0;\n        let requestCount = 0;\n\n        context.create({\n            'foo.get': {\n                url: host + 'api/return-stamp',\n                storage: false,\n                willFetch: function (vars, config, from) {\n                    if (from === 'remote') {\n                        requestCount++;\n                    }\n                },\n                plugins: [\n                    nattyFetch.plugin.soon\n                ]\n            }\n        });\n\n        // 外层请求, 首次请求没有storage缓存, success回调只应该执行一次, 数据来自远程服务器\n        let outerData;\n        let innerDataFromStorage;\n        context.api.foo.get.soon({\n            q: 1\n        }, function (data) {\n            outerCount++;\n            outerData = data;\n            // console.log('data', JSON.stringify(data));\n            // 内层请求, 没有storage缓存, success回调只应该执行一次,\n            context.api.foo.get.soon({\n                q:1\n            }, function (data2) {\n                innerCount++;\n                innerDataFromStorage = data2;\n                // console.log('data2', JSON.stringify(data2));\n            });\n        }, function (e) {\n            done(e);\n        });\n\n        setTimeout(function () {\n            try {\n                expect(outerCount).to.be(1);\n                expect(innerCount).to.be(1);\n                expect(requestCount).to.be(2);\n                expect(outerData.fromStorage).to.be(false);\n                expect(innerDataFromStorage.fromStorage).to.be(false);\n                expect(JSON.stringify(outerData.content)).not.to.be(JSON.stringify(innerDataFromStorage.content));\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }, 800);\n    });\n});","import {host} from '../config/host'\n\ndescribe('plugin loop', function () {\n    // it('loop 2x', function (done) {\n    //     this.timeout(1000*600);\n    //     let context = nattyFetch.context({\n    //         urlPrefix: host,\n    //         mock: false\n    //     });\n    //\n    //     context.create('taxi', {\n    //         getDriverNum: {\n    //             url: host + 'api/return-success',\n    //             plugins: [\n    //                 nattyFetch.plugin.loop\n    //             ]\n    //         }\n    //     });\n    //\n    //     let time = 0;\n    //\n    //     // 开始轮询\n    //     let stop1 = context.api.taxi.getDriverNum.loop({\n    //         data: {\n    //             loop: '__1__'\n    //         },\n    //         duration: 1000\n    //     }, function (data) {\n    //         // 成功回掉\n    //         time++;\n    //     }, function (error) {\n    //         // 失败回调\n    //     });\n    //\n    //     // 开始轮询\n    //     let stop2 = context.api.taxi.getDriverNum.loop({\n    //         data: {\n    //             loop: '__2__'\n    //         },\n    //         duration: 1000\n    //     }, function (data) {\n    //         // 成功回掉\n    //         time++;\n    //     }, function (error) {\n    //         // 失败回调\n    //     });\n    //\n    //     setTimeout(function () {\n    //         // expect(time).to.be.above(1);\n    //         // 验证状态\n    //         // expect(context.api.taxi.getDriverNum.looping).to.be(true);\n    //         // 停止轮询\n    //         stop1();\n    //         // 验证状态\n    //         // expect(context.api.taxi.getDriverNum.looping).to.be(false);\n    //         // done();\n    //     }, 5000);\n    //\n    //     setTimeout(function () {\n    //         // expect(time).to.be.above(1);\n    //         // 验证状态\n    //         // expect(context.api.taxi.getDriverNum.looping).to.be(true);\n    //         // 停止轮询\n    //         stop2();\n    //         // 验证状态\n    //         // expect(context.api.taxi.getDriverNum.looping).to.be(false);\n    //         // done();\n    //     }, 8000);\n    //\n    //\n    //     setInterval(function () {\n    //         console.log('1:', stop1.looping);\n    //         console.log('2:', stop2.looping);\n    //     }, 1000)\n    // });\n\n\n\n    it('loop', function (done) {\n\n        let context = nattyFetch.context({\n            urlPrefix: host,\n            mock: false\n        });\n\n        context.create('taxi', {\n            getDriverNum: {\n                url: host + 'api/return-success',\n                plugins: [\n                    nattyFetch.plugin.loop\n                ]\n            }\n        });\n\n        let time = 0;\n\n        // 开始轮询\n        let stop = context.api.taxi.getDriverNum.loop({\n            data: {},\n            duration: 200\n        }, function (data) {\n            // 成功回掉\n            time++;\n        }, function (error) {\n            // 失败回调\n        });\n\n        setTimeout(function () {\n            expect(time).to.be.above(1);\n            // 验证状态\n            expect(stop.looping).to.be(true);\n            // 停止轮询\n            stop();\n            // 验证状态\n            expect(stop.looping).to.be(false);\n            done();\n        }, 1000);\n    });\n});","\"use strict\";\nimport {host} from '../config/host'\n\ndescribe.skip('plugin customRequest', function () {\n    this.timeout(1000*10);\n    it('customRequest', function (done) {\n\n        let context = nattyFetch.context({\n            urlPrefix: host,\n            mock: false\n        });\n\n        const {appendQueryString, extend, param} = nattyFetch._util;\n        let lwp = function (apiInstance) {\n            // 只有get/post才使用lwp\n            if (apiInstance.config.jsonp) {\n                return;\n            }\n            apiInstance.config.customRequest = function (vars, config, defer) {\n                let isPOST = config.method === 'POST';\n\n                let lwpOptions = {\n                    uri: isPOST ? config.url : appendQueryString(config.url, extend(vars.mark, vars.data, config.traditional)),\n                    method: config.method,\n                    headers: config.header,\n                    body: isPOST ? param(vars.data, config.traditional) : '',\n                    onSuccess: function (res) {\n                        if (res.statusCode == 200) {\n                            apiInstance.processResponse(vars, config, defer, JSON.parse(res.responseText));\n                        } else {\n                            defer.reject({\n                                statusCode: res.statusCode,\n                                message: res.statusText\n                            });\n                        }\n                    },\n                    onError: function (error) {\n                        defer.reject(error);\n                    }\n                };\n                dd.internal.request.httpOverLWP(lwpOptions);\n            }\n        }\n\n        context.create({\n            foo: {\n                url: 'http://120.26.213.24:3000/api/xhr-success',\n                method: 'POST',\n                data: {gg:'a'},\n                plugins: [\n                    lwp\n                ]\n            },\n            boo: {\n                url: 'http://120.26.213.24:3000/api/xhr-failed',\n                plugins: [\n                    lwp\n                ]\n            },\n            boo500: {\n                url: 'http://120.26.213.24:3000/api/500',\n                plugins: [\n                    lwp\n                ]\n            },\n            boo404: {\n                url: 'http://example404.com/',\n                plugins: [\n                    lwp\n                ]\n            },\n        });\n\n        context.api.foo({hh:'a'}).then(function (content) {\n            console.log('foo');\n            console.log(content);\n            done();\n        });\n\n        // context.api.boo().then(function (content) {\n        //\n        // }).catch(function (error) {\n        //     console.log('boo');\n        //     console.log(error);\n        //     // done();\n        // });\n        //\n        // context.api.boo500().then(function (content) {\n        //\n        // }).catch(function (error) {\n        //     console.log('500');\n        //     console.log(error);\n        //\n        // });\n        //\n        // context.api.boo404().then(function (content) {\n        //\n        // }).catch(function (error) {\n        //     console.log('404');\n        //     console.log(error);\n        //\n        // });\n    });\n});\n","import {host} from '../config/host'\n\nlet xit = function(ignore, fn) {\n    fn();\n}\nxit.xonly = xit;\n\ndescribe('nattyFetch.create', function () {\n\n    this.timeout(1000*30);\n\n    it('play with standard data structure', function (done) {\n        let fooFetch = nattyFetch.create({\n            urlPrefix: host,\n            url: 'api/order-create',\n            method: 'POST',\n            //traditional: true\n        });\n\n        fooFetch().then(function(data) {\n            try {\n                expect(data.id).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n    it('play with non-standard data structure by `fit`', function (done) {\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/order-create-non-standard',\n            method: 'POST',\n            fit: function (response) {\n                return {\n                    success: !response.hasError,\n                    content: response.content\n                };\n            }\n        });\n\n        fooFetch().then(function(data) {\n            try {\n                expect(data.id).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n    it('process data', function (done) {\n\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/order-create',\n            method: 'POST',\n            process: function (content) {\n                return {\n                    orderId: content.id\n                };\n            }\n        });\n\n        fooFetch().then(function(content) {\n            try {\n                expect(content.orderId).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n    // 固定参数和动态参数 在process和fix方法中都可以正确获取到\n    it('`vars.data` in process or fix method', function (done) {\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/order-create',\n            method: 'POST',\n            data: {\n                liveData: 1\n            },\n            willFetch: function (vars, config) {\n                vars.data.hookData = 1;\n                // console.log(vars);\n                // console.log(config);\n                // console.log(this);\n            },\n            process: function (content, vars) {\n                expect(vars.data.liveData).to.be(1);\n                expect(vars.data.hookData).to.be(1);\n                return {\n                    orderId: content.id\n                };\n            },\n            fit: function (response, vars) {\n                expect(vars.data.liveData).to.be(1);\n                expect(vars.data.hookData).to.be(1);\n                return response;\n            }\n        });\n\n        fooFetch().then(function(data) {\n            try {\n                expect(data.orderId).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n\n    it('skip process data when it is mocking ', function (done) {\n        let fooFetch = nattyFetch.create({\n            mock: true,\n            mockUrl: host + 'api/order-create',\n            process: function (response) {\n                if (this.mock) {\n                    return response;\n                } else {\n                    return {\n                        orderId: response.id\n                    };\n                }\n            }\n        });\n\n        fooFetch().then(function(data) {\n            try {\n                expect(data.id).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n    it('error by requesting cross-domain with disabled header [NOTE: IE的行为已被标准化]', function (done) {\n        let fooFetch = nattyFetch.create({\n            //log: true,\n            url: host + 'api/order-create',\n            method: 'POST',\n            header: {foo: 'foo'} // 跨域时, 自定义的`header`将被忽略\n        });\n\n        fooFetch().then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }, function(error) {\n            // can not go here\n        });\n    });\n\n    it('error by timeout', function (done) {\n        let fooFetch = nattyFetch.create({\n            //log: true,\n            url: host + 'api/timeout',\n            method: 'POST',\n            timeout: 100\n        });\n\n        fooFetch().then(function () {\n            // can not go here\n        }, function(error) {\n            try {\n                expect(error.timeout).to.be(true);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n    it('error by 500', function (done) {\n        let fooFetch = nattyFetch.create({\n            //log: true,\n            url: host + 'api/500',\n            method: 'POST'\n        });\n\n        fooFetch().then(function () {\n            // can not go here\n        }, function(error) {\n            try {\n                expect(error.status).to.be(nattyFetch.ajax.fallback ? undefined : 500);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n    it('error by 404', function (done) {\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/404',\n            method: 'POST'\n        });\n\n        fooFetch().then(function () {\n            // can not go here\n        })['catch'](function (error) {\n            try {\n                if (!nattyFetch.ajax.fallback) {\n                    // 即使是现代浏览器,也有status为0的情况\n                    expect(error.status === 0 || error.status === 404).to.be(true);\n                } else {\n                    expect(error.status).to.be(undefined);\n                }\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n    it('`GET` resolving after retry', function (done) {\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/retry-success',\n            method: 'GET',\n            retry: 2\n        });\n\n        fooFetch().then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        }, function() {\n            // can not go here\n        });\n    });\n\n    it('`GET` with fn-data resolving after retry', function (done) {\n\n        let count = 0;\n\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/retry-success',\n            method: 'GET',\n            retry: 2,\n            data: function () {\n                return {\n                    count: count++\n                }\n            }\n        });\n\n        fooFetch().then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        }, function() {\n            // can not go here\n        });\n    });\n\n    it('`POST` resolving after retry', function (done) {\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/retry-success',\n            method: 'POST',\n            retry: 2\n        });\n\n        fooFetch().then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        }, function() {\n            // can not go here\n        });\n    });\n\n    it('rejecting after retry', function (done) {\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/return-error',\n            retry: 1\n        });\n\n        fooFetch().then(function (data) {\n            // can not go here\n        }, function(error) {\n            try {\n                expect(error.code).to.be(1);\n                done();\n            } catch(e) {\n                done(e);\n            }\n        });\n    });\n\n    // 简单请求的`ignoreSelfConcurrent`不会起作用, 连发两次请求，第二次依然有效\n    it('`ignoreSeftConcurrent` should work', function (done) {\n        let fooFetch = nattyFetch.create({\n            cache: false,\n            url: host + 'api/timeout', // 请求延迟返回的接口\n            ignoreSelfConcurrent: true\n        });\n\n        fooFetch().then(function (data) {\n            try {\n                expect(data.id).to.be(1);\n                done();\n            } catch (e) {\n                done(e);\n            }\n        });\n\n        // 第一次请求未完成之前 第二次请求返回的是一个伪造的promise对象\n        let dummyPromise = fooFetch().then(function(){\n            throw new Error('unexpected `resolved`');\n        });\n        expect(dummyPromise).to.have.property('dummy');\n\n        // 伪造的promise对象要保证支持链式调用\n        expect(dummyPromise.then()).to.be(dummyPromise);\n        expect(dummyPromise.then().catch()).to.be(dummyPromise);\n    });\n\n    // 连发两次请求, 第二次请求发起时, 如果第一次请求还没有返回, 则取消掉第一次请求(即: 返回时不响应)\n    it('`overrideSeftConcurrent` should work (XHR)', function (done) {\n\n        // 第一次请求, 不应该有响应\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/timeout', // 请求延迟返回的接口\n            data: {\n                d: 0\n            },\n            overrideSelfConcurrent: true,\n            process: function(content, vars) {\n                // vars不应该混淆\n                expect(vars.data.d).to.be(2);\n            }\n        });\n\n        let count = 0;\n\n        // 第一次请求, 不应该有响应\n        fooFetch({\n            d: 1\n        }).then(function (data) {\n            count++\n        });\n\n        // 第二次请求, 只响应这次请求\n        setTimeout(function(){\n            fooFetch({\n                d:2\n            }).then(function (data) {\n                try {\n                    expect(count).to.be(0);\n                    done();\n                } catch (e) {\n                    done(e);\n                }\n            });\n        }, 300);\n    });\n\n    // 取消响应\n    it('calling `abort`', function (done) {\n\n        let count = 0;\n\n        let fooFetch = nattyFetch.create({\n            url: host + 'api/success'\n        });\n\n        fooFetch().then(function () {\n            // 不应该执行到这里\n            count++\n        });\n\n        expect(fooFetch.pending).to.be(true);\n\n        // 马上取消\n        fooFetch.abort();\n\n        setTimeout(function () {\n            try {\n                expect(count).to.be(0);\n                expect(fooFetch.pending).to.be(false);\n                done();\n            } catch (e) {\n                done(e);\n            }\n        }, 300);\n    });\n});","import {host} from '../config/host'\n\nconst xit = function(ignore, fn) {\n    fn();\n}\nxit.xonly = xit;\n\nconst noop = function () {\n\n}\n\n/**\n * 伪造的带有`finally`方法的`promise`对象\n * new MyPromise(function(resolve, reject) {})\n */\nclass MyPromise {\n    constructor(f) {\n        // 对应的`resolve`和`reject`需要是函数\n        f(noop, noop)\n    }\n    then() {\n        return this\n    }\n    catch() {\n        return this\n    }\n    finally() {\n        return this\n    }\n}\n\ndescribe('use private `Promise` object', function () {\n\n    this.timeout(1000*30);\n\n    it('MyPromise instance should have `finally` method', function () {\n        let fooFetch = nattyFetch.create({\n            urlPrefix: host,\n            url: 'api/order-create',\n            method: 'POST',\n            Promise: MyPromise\n        });\n\n        expect(fooFetch().finally).to.be.a('function');\n    });\n\n\n    it('origin Promise instance dose NOT have `finally` method', function () {\n        let fooFetch = nattyFetch.create({\n            urlPrefix: host,\n            url: 'api/order-create',\n            method: 'POST'\n        });\n\n        expect(fooFetch().finally).to.be(undefined);\n    });\n\n\n    it('set RSVP Promise on context', function () {\n        let context = nattyFetch.context({\n            Promise: MyPromise\n        });\n\n        context.create({\n            fooFetch: {\n                urlPrefix: host,\n                url: 'api/order-create',\n                method: 'POST'\n            }\n        });\n\n        expect(context.api.fooFetch().finally).to.be.a('function');\n    });\n});"],"names":["const","let","xit"],"mappings":"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"}